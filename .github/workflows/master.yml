name: build and publish

on:
  - push
  - pull_request


jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Declare outputs
        id: declare
        run: |
          echo "::set-output name=version::1.$(date +%Y%m%d%H%M%S).$(git describe --always --dirty --exclude '*')"
          echo "::set-output name=do_deploy::${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, 'ci skip') }}"
    outputs:
      version: "${{ steps.declare.outputs.version }}"
      do_deploy: "${{ steps.declare.outputs.do_deploy }}"
  build:
    runs-on: ubuntu-latest
    needs:
      - setup
    env:
      VERSION: "${{ needs.setup.outputs.version }}"
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: test and build
        run: ./gradlew -Pversion="${VERSION}" build
      - name: Save build artifacts
        uses: actions/upload-artifact@v2
        with:
          path: build

  release:
    name: Create Release
    needs:
      - setup
      - build
    runs-on: ubuntu-latest
    if: needs.setup.outputs.do_deploy == 'true'
    env:
      VERSION: "${{ needs.setup.outputs.version }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Set changelog
        # (Escape newlines see https://github.com/actions/create-release/issues/25)
        run: |
          text="$(git --no-pager log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%h %s")"
          text="${text//$'%'/%25}"
          text="${text//$'\n'/%0A}"
          text="${text//$'\r'/%0D}"
          echo "::set-env name=CHANGELOG::$text"
      - name: Fetch build artifacts
        uses: actions/download-artifact@v2
        with:
          path: build
      - name: publish
        run: ./gradlew -Pversion="${VERSION}" publish
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          body: |
            Changes in this Release

            ${{ env.CHANGELOG }}
          draft: false
          prerelease: false
      - name: Upload release artifact
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/kafka-connect-vault-provider-${{ env.RELEASE_TAG }}.jar
          asset_name: kafka-connect-vault-provider-${{ env.RELEASE_TAG }}.jar
          asset_content_type: application/java-archive